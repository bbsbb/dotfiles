---
- name: "Install several common dev utils."
  apt:
    name:
      - build-essential
      - git
      - jq
      - httpie
      - python-pip
      - silversearcher-ag
      - tmux
      - zsh
      - mosh
    update_cache: yes
    state: latest

- name: "Install powerline."
  pip:
    name: powerline-status
    state: present

- name: "Add Tmux configuration file."
  become: yes
  become_user: "{{ ssh_params.user }}"
  copy:
    src: "./files/tmux/.tmux.conf"
    dest: "/home/{{ ssh_params.user }}/.tmux.conf"

- name: "Change default shell to ZSH"
  user:
    name: "{{ ssh_params.user }}"
    shell: "/bin/zsh"

- name: "Add .zhsrc."
  copy:
    src: "./files/zsh/.zshrc"
    dest: "/home/{{ ssh_params.user }}/.zshrc"

- name: "Check if we have a patched zsh."
  become: yes
  become_user: "{{ ssh_params.user }}"
  stat:
    path: "~/.oh-my-zsh/oh-my-zsh.patch"
  register: zsh_patched

- name: "Fetch Oh My Zsh."
  become: yes
  become_user: "{{ ssh_params.user }}"
  git:
    repo: "https://github.com/robbyrussell/oh-my-zsh.git"
    dest: "~/.oh-my-zsh"
    accept_hostkey: true
  when: zsh_patched.stat.exists == false

- name: "Copy ZSH prompt patch."
  become: yes
  become_user: "{{ ssh_params.user }}"
  copy:
    src: "./files/zsh/oh-my-zsh.patch"
    dest: "/home/{{ ssh_params.user }}/.oh-my-zsh/oh-my-zsh.patch"
  when: zsh_patched.stat.exists == false

- name: "Run GIT command to apply ZSH patch."
  become: yes
  become_user: "{{ ssh_params.user }}"
  command: "git apply oh-my-zsh.patch"
  args:
    chdir: "/home/{{ ssh_params.user }}/.oh-my-zsh"
  when: zsh_patched.stat.exists == false

- name: "Add Emacs 25.1 PPA."
  apt_repository:
    repo: "ppa:kelleyk/emacs"

- name: "Install Emacs package."
  apt:
    name:
      - emacs25
    update_cache: yes
    state: latest

- name: "Check if we have a configured emacs installation."
  become: yes
  become_user: "{{ ssh_params.user }}"
  stat:
    path: "~/.emacs.d/init.el"
  register: emacs_configured

- name: "Create .emacs.d."
  become: yes
  become_user: "{{ ssh_params.user }}"
  copy:
    src: "./files/emacs/"
    dest: "/home/{{ ssh_params.user }}/.emacs.d/"
  when: emacs_configured.stat.exists == false
